{"version":3,"file":"static/js/992.dd0869ff.chunk.js","mappings":"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","sources":["redux/contacts/selectors.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Contacts.module.css?8552","pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.contacts;\nexport const getStatusFilter = state => state.filters.status;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/contactsSlice';\nimport Notiflix from 'notiflix';\nimport styles from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [formData, setFormData] = useState({ name: '', number: '' });\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = formData;\n\n    if (name.trim() === '' || number.trim() === '') {\n      return;\n    }\n\n    const existingContact = contacts.find(contact => contact.name === name);\n    if (existingContact) {\n      Notiflix.Notify.failure(`${name} already exists in the list`);\n      return;\n    }\n\n    dispatch(addContact(name, number));\n    setFormData({ name: '', number: '' });\n    Notiflix.Notify.success('Contact added successfully');\n  };\n\n  const handleInputChange = event => {\n    const inputName = event.target.name;\n    const inputValue = event.target.value;\n    setFormData({ ...formData, [inputName]: inputValue });\n  };\n\n  return (\n    <div className={styles.addContactContainer}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">Name:</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={formData.name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Z]+(([' \\-][a-zA-Z ])?[a-zA-Z]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label htmlFor=\"number\">Number:</label>\n        <input\n          type=\"tel\"\n          id=\"number\"\n          name=\"number\"\n          value={formData.number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"tableContainer\":\"ContactList_tableContainer__lJniq\",\"table\":\"ContactList_table__GN5S1\"};","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getStatusFilter } from '../../redux/contacts/selectors';\nimport { deleteContact, updateContact } from '../../redux/contacts/contactsSlice';\nimport Notiflix from 'notiflix';\nimport styles from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getStatusFilter);\n  const dispatch = useDispatch();\n  const [editContactId, setEditContactId] = useState(null);\n  const [editFormData, setEditFormData] = useState({\n    name: '',\n    number: ''\n  });\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n    Notiflix.Notify.success('Contact deleted successfully');\n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n\n    const formValues = {\n      name: contact.name,\n      number: contact.number\n    };\n\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleEditFormChange = event => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute('name');\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setEditFormData(newFormData);\n  };\n\n  const handleEditFormSubmit = event => {\n    event.preventDefault();\n\n    const editedContact = {\n      id: editContactId,\n      name: editFormData.name,\n      number: editFormData.number\n    };\n\n    dispatch(updateContact(editedContact));\n    Notiflix.Notify.success('Contact updated successfully');\n    setEditContactId(null);\n  };\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div className={styles.tableContainer}>\n      <form onSubmit={handleEditFormSubmit}>\n        <table className={styles.table}>\n          <thead>\n            <tr>\n              <th>Nume/Prenume</th>\n              <th>Număr de telefon</th>\n              <th>Acțiuni</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredContacts.map(contact => (\n              <tr key={contact.id}>\n                {editContactId === contact.id ? (\n                  <>\n                    <td>\n                      <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={editFormData.name}\n                        onChange={handleEditFormChange}\n                        required\n                      />\n                    </td>\n                    <td>\n                      <input\n                        type=\"text\"\n                        name=\"number\"\n                        value={editFormData.number}\n                        onChange={handleEditFormChange}\n                        required\n                      />\n                    </td>\n                    <td>\n                      <button type=\"submit\">Save</button>\n                      <button type=\"button\" onClick={handleCancelClick}>\n                        Cancel\n                      </button>\n                    </td>\n                  </>\n                ) : (\n                  <>\n                    <td>{contact.name}</td>\n                    <td>{contact.number}</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        onClick={event => handleEditClick(event, contact)}\n                      >\n                        Edit\n                      </button>\n                      <button onClick={() => handleDelete(contact.id)}>Delete</button>\n                    </td>\n                  </>\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filter_filterContainer__8G57N\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { getStatusFilter } from '../../redux/contacts/selectors';\nimport { setFilter } from '../../redux/contacts/filtersSlice';\nimport styles from '../Filter/Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getStatusFilter);\n  const dispatch = useDispatch();\n\n  const handleAddFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div className={styles.filterContainer}>\n      <input\n        type=\"text\"\n        name=\"search\"\n        value={filter}\n        onChange={handleAddFilter}\n        placeholder=\"Find contact by name...\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"Contacts_mainContainer__c1nQy\",\"title\":\"Contacts_title__HJPSk\",\"contactsListContainer\":\"Contacts_contactsListContainer__FHQb-\"};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { getError, getIsLoading } from '../redux/contacts/selectors';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport styles from './Contacts.module.css';\n\nconst Contacts = () => {\n  console.log('Fetching contacts...');\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    console.log('Fetching contacts...');\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.mainContainer}>\n      <ContactForm />\n      {isLoading && !error ? (\n        <b>Request in progress...</b>\n      ) : (\n        <>\n          {contacts.length > 0 ? (\n            <div className={styles.contactsListContainer}>\n              <Filter />\n              <ContactList />\n            </div>\n          ) : (\n            <h1 className={styles.title}>Add your first contact</h1>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContacts","state","contacts","getStatusFilter","filters","status","getIsLoading","isLoading","getError","error","_useState","useState","name","number","_useState2","_slicedToArray","formData","setFormData","useSelector","dispatch","useDispatch","handleInputChange","event","inputName","target","inputValue","value","_objectSpread","_defineProperty","_jsx","className","styles","children","_jsxs","onSubmit","e","preventDefault","trim","find","contact","Notiflix","concat","addContact","htmlFor","type","id","onChange","pattern","title","required","filter","editContactId","setEditContactId","_useState3","_useState4","editFormData","setEditFormData","handleCancelClick","handleEditFormChange","fieldName","getAttribute","fieldValue","newFormData","filteredContacts","toLowerCase","includes","editedContact","updateContact","map","_Fragment","onClick","formValues","handleEditClick","deleteContact","setFilter","placeholder","console","log","useEffect","fetchContacts","ContactForm","length","Filter","ContactList"],"sourceRoot":""}